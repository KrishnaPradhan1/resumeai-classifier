version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumeai-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://resumeai:resumeai123@postgres:5432/resumeai
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production
      - DEBUG=false
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,https://resumeai-frontend.railway.app
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/models:/app/models
    networks:
      - resumeai-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resumeai-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_GROK_API_KEY=${GROK_API_KEY}
    depends_on:
      - backend
    networks:
      - resumeai-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: resumeai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=resumeai
      - POSTGRES_USER=resumeai
      - POSTGRES_PASSWORD=resumeai123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - resumeai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: resumeai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - resumeai-network

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumeai-celery-worker
    restart: unless-stopped
    command: celery -A app.core.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://resumeai:resumeai123@postgres:5432/resumeai
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/models:/app/models
    networks:
      - resumeai-network

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumeai-celery-beat
    restart: unless-stopped
    command: celery -A app.core.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://resumeai:resumeai123@postgres:5432/resumeai
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/models:/app/models
    networks:
      - resumeai-network

  # Flower for Celery Monitoring
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumeai-flower
    restart: unless-stopped
    command: celery -A app.core.celery flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - resumeai-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: resumeai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - resumeai-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  resumeai-network:
    driver: bridge 